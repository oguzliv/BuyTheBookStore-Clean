// <auto-generated />
using System;
using BuyTheBookStore.DataAccess.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BuyTheBookStore.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BuyTheBookStore.BuyTheBookStore.Core.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("OrderedBooks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BuyTheBookStore.BuyTheBookStore.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("RoleText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BuyTheBookStore.Core.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Genre")
                        .HasColumnType("integer");

                    b.Property<string>("GenreText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("NSPF")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("double precision")
                        .HasComputedColumnSql("\"SellCount\"/\"Price\"", true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("SellCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1085e04b-86a7-461a-952f-8715cb1ccff8"),
                            AuthorName = "author1",
                            Genre = 0,
                            GenreText = "ACTION",
                            NSPF = 0.0,
                            Name = "book1",
                            Price = 15.0,
                            SellCount = 20
                        },
                        new
                        {
                            Id = new Guid("27058523-d841-4bf4-8ab3-2c7b232af066"),
                            AuthorName = "author2",
                            Genre = 0,
                            GenreText = "ACTION",
                            NSPF = 0.0,
                            Name = "book2",
                            Price = 30.0,
                            SellCount = 40
                        },
                        new
                        {
                            Id = new Guid("37a681ae-1178-4868-9dce-04e59e06605c"),
                            AuthorName = "author3",
                            Genre = 0,
                            GenreText = "ACTION",
                            NSPF = 0.0,
                            Name = "book3",
                            Price = 25.0,
                            SellCount = 40
                        },
                        new
                        {
                            Id = new Guid("ed6aee94-fc2d-43e8-b7f2-335eab16965e"),
                            AuthorName = "author4",
                            Genre = 0,
                            GenreText = "ACTION",
                            NSPF = 0.0,
                            Name = "book4",
                            Price = 65.0,
                            SellCount = 100
                        },
                        new
                        {
                            Id = new Guid("daba9607-84df-40a3-b709-b74ce16108d1"),
                            AuthorName = "author5",
                            Genre = 1,
                            GenreText = "ROMANCE",
                            NSPF = 0.0,
                            Name = "book5",
                            Price = 20.0,
                            SellCount = 20
                        },
                        new
                        {
                            Id = new Guid("da5cf20a-6ffb-42fe-8d7f-756868000585"),
                            AuthorName = "author6",
                            Genre = 1,
                            GenreText = "ROMANCE",
                            NSPF = 0.0,
                            Name = "book6",
                            Price = 10.0,
                            SellCount = 40
                        },
                        new
                        {
                            Id = new Guid("ee8e99f9-f659-41d3-9acf-d7fc9904330e"),
                            AuthorName = "author6",
                            Genre = 0,
                            GenreText = "ACTION",
                            NSPF = 0.0,
                            Name = "book7",
                            Price = 35.0,
                            SellCount = 50
                        });
                });

            modelBuilder.Entity("BuyTheBookStore.BuyTheBookStore.Core.Entities.Order", b =>
                {
                    b.HasOne("BuyTheBookStore.BuyTheBookStore.Core.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuyTheBookStore.BuyTheBookStore.Core.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
